/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.payouter.domain;


import com.rbkmoney.payouter.domain.tables.Adjustment;
import com.rbkmoney.payouter.domain.tables.CashFlowPosting;
import com.rbkmoney.payouter.domain.tables.EventStockMeta;
import com.rbkmoney.payouter.domain.tables.Invoice;
import com.rbkmoney.payouter.domain.tables.Payment;
import com.rbkmoney.payouter.domain.tables.Payout;
import com.rbkmoney.payouter.domain.tables.PayoutEvent;
import com.rbkmoney.payouter.domain.tables.PayoutSummary;
import com.rbkmoney.payouter.domain.tables.Refund;
import com.rbkmoney.payouter.domain.tables.Report;
import com.rbkmoney.payouter.domain.tables.ShopMeta;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sht extends SchemaImpl {

    private static final long serialVersionUID = 1748401484;

    /**
     * The reference instance of <code>sht</code>
     */
    public static final Sht SHT = new Sht();

    /**
     * The table <code>sht.adjustment</code>.
     */
    public final Adjustment ADJUSTMENT = com.rbkmoney.payouter.domain.tables.Adjustment.ADJUSTMENT;

    /**
     * The table <code>sht.cash_flow_posting</code>.
     */
    public final CashFlowPosting CASH_FLOW_POSTING = com.rbkmoney.payouter.domain.tables.CashFlowPosting.CASH_FLOW_POSTING;

    /**
     * The table <code>sht.event_stock_meta</code>.
     */
    public final EventStockMeta EVENT_STOCK_META = com.rbkmoney.payouter.domain.tables.EventStockMeta.EVENT_STOCK_META;

    /**
     * The table <code>sht.invoice</code>.
     */
    public final Invoice INVOICE = com.rbkmoney.payouter.domain.tables.Invoice.INVOICE;

    /**
     * The table <code>sht.payment</code>.
     */
    public final Payment PAYMENT = com.rbkmoney.payouter.domain.tables.Payment.PAYMENT;

    /**
     * The table <code>sht.payout</code>.
     */
    public final Payout PAYOUT = com.rbkmoney.payouter.domain.tables.Payout.PAYOUT;

    /**
     * The table <code>sht.payout_event</code>.
     */
    public final PayoutEvent PAYOUT_EVENT = com.rbkmoney.payouter.domain.tables.PayoutEvent.PAYOUT_EVENT;

    /**
     * The table <code>sht.payout_summary</code>.
     */
    public final PayoutSummary PAYOUT_SUMMARY = com.rbkmoney.payouter.domain.tables.PayoutSummary.PAYOUT_SUMMARY;

    /**
     * The table <code>sht.refund</code>.
     */
    public final Refund REFUND = com.rbkmoney.payouter.domain.tables.Refund.REFUND;

    /**
     * The table <code>sht.report</code>.
     */
    public final Report REPORT = com.rbkmoney.payouter.domain.tables.Report.REPORT;

    /**
     * The table <code>sht.shop_meta</code>.
     */
    public final ShopMeta SHOP_META = com.rbkmoney.payouter.domain.tables.ShopMeta.SHOP_META;

    /**
     * No further instances allowed
     */
    private Sht() {
        super("sht", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.ADJUSTMENT_ID_SEQ,
            Sequences.CASH_FLOW_DESCRIPTION_ID_SEQ,
            Sequences.CASH_FLOW_POSTING_ID_SEQ,
            Sequences.PAYMENT_ID_SEQ,
            Sequences.PAYOUT_EVENT_ID_SEQUENCE,
            Sequences.PAYOUT_ID_SEQUENCE,
            Sequences.REFUND_ID_SEQ,
            Sequences.REPORT_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Adjustment.ADJUSTMENT,
            CashFlowPosting.CASH_FLOW_POSTING,
            EventStockMeta.EVENT_STOCK_META,
            Invoice.INVOICE,
            Payment.PAYMENT,
            Payout.PAYOUT,
            PayoutEvent.PAYOUT_EVENT,
            PayoutSummary.PAYOUT_SUMMARY,
            Refund.REFUND,
            Report.REPORT,
            ShopMeta.SHOP_META);
    }
}
