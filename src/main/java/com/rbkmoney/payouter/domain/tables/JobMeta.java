/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.payouter.domain.tables;


import com.rbkmoney.payouter.domain.Keys;
import com.rbkmoney.payouter.domain.Sht;
import com.rbkmoney.payouter.domain.tables.records.JobMetaRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobMeta extends TableImpl<JobMetaRecord> {

    private static final long serialVersionUID = -569798205;

    /**
     * The reference instance of <code>sht.job_meta</code>
     */
    public static final JobMeta JOB_META = new JobMeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobMetaRecord> getRecordType() {
        return JobMetaRecord.class;
    }

    /**
     * The column <code>sht.job_meta.party_id</code>.
     */
    public final TableField<JobMetaRecord, String> PARTY_ID = createField("party_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>sht.job_meta.contract_id</code>.
     */
    public final TableField<JobMetaRecord, String> CONTRACT_ID = createField("contract_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>sht.job_meta.payout_tool_id</code>.
     */
    public final TableField<JobMetaRecord, String> PAYOUT_TOOL_ID = createField("payout_tool_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>sht.job_meta.calendar_id</code>.
     */
    public final TableField<JobMetaRecord, Integer> CALENDAR_ID = createField("calendar_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sht.job_meta.scheduler_id</code>.
     */
    public final TableField<JobMetaRecord, Integer> SCHEDULER_ID = createField("scheduler_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sht.job_meta.wtime</code>.
     */
    public final TableField<JobMetaRecord, LocalDateTime> WTIME = createField("wtime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>sht.job_meta</code> table reference
     */
    public JobMeta() {
        this("job_meta", null);
    }

    /**
     * Create an aliased <code>sht.job_meta</code> table reference
     */
    public JobMeta(String alias) {
        this(alias, JOB_META);
    }

    private JobMeta(String alias, Table<JobMetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobMeta(String alias, Table<JobMetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sht.SHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobMetaRecord> getPrimaryKey() {
        return Keys.JOB_META_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobMetaRecord>> getKeys() {
        return Arrays.<UniqueKey<JobMetaRecord>>asList(Keys.JOB_META_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobMeta as(String alias) {
        return new JobMeta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobMeta rename(String name) {
        return new JobMeta(name, null);
    }
}
